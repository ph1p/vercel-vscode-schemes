{
  "title": "JSON schema for vercel.json configuration files",
  "type": "object",
  "properties": {
    "functions": {
      "type": "object",
      "description": "A glob pattern that matches the paths of the Serverless Functions you would like to customize (like api/*.js or api/test.js).",
      "patternProperties": {
        "^.*$": {
          "type": "object",
          "properties": {
            "runtime": {
              "type": "string",
              "optional": true,
              "description": "The npm package name of a Runtime, including its version."
            },
            "includeFiles": {
              "type": "string",
              "optional": true,
              "description": "A glob pattern to match files that should be included in your Serverless Function. If you’re using a Community Runtime, the behavior might vary. Please consult its documentation for more details."
            },
            "excludeFiles": {
              "type": "string",
              "optional": true,
              "description": "A glob pattern to match files that should be excluded from your Serverless Function. If you’re using a Community Runtime, the behavior might vary. Please consult its documentation for more details."
            },
            "memory": {
              "type": "number",
              "optional": true,
              "description": "An integer defining the memory your Serverless Function should be provided with (between 128 and 3008, in intervals of 64)."
            },
            "maxDuration": {
              "type": "number",
              "optional": true,
              "description": "An integer defining how long your Serverless Function should be allowed to run on every request in seconds (between 1 and the maximum limit of your plan, as mentioned below)."
            }
          }
        }
      }
    },
    "version": {
      "type": "number",
      "default": 2,
      "enum": [1, 2],
      "description": "Specifies the Vercel Platform version the deployment should use and is known to work with. We strongly recommend setting a version when working on production systems or using source control (e.g. Git)."
    },
    "name": {
      "type": "string",
      "default": "vercel-chat",
      "maxLength": 52,
      "description": "The prefix for all new deployment instances. The CLI usually generates this field automatically based on the name of the directory. But if you'd like to define it explicitly, this is the way to go."
    },
    "alias": {
      "description": "Valid values: domain names (optionally including subdomains) added to the account, or a string for a suffixed URL using .vercel.app or a Custom Deployment Suffix (available on the Enterprise plan).\n\nLimit: A maximum of 64 aliases in the array.\n\nThe alias or aliases are applied automatically using Vercel for GitHub, Vercel for GitLab, or Vercel for Bitbucket when merging or pushing to the Production Branch.\n\nYou can deploy to the defined aliases using Vercel CLI by setting the production deployment environment target.",
      "type": ["array", "string"],
      "default": "name.vercel.app",
      "items": {
        "type": "string"
      }
    },
    "scope": {
      "type": "string",
      "description": "Valid values: For teams, either an ID or slug. For users, either a email address, username, or ID.\n\nThis property determines the scope (user or team) under which the project will be deployed by Vercel CLI.\n\nFor teams, either an ID or slug. For users, either a email address, username, or ID.\n\nFurthermore, it also affects any other actions that the user takes within the directory that contains this configuration (e.g. listing Environment Variables using vercel secrets ls)."
    },
    "env": {
      "type": "object",
      "description": "Environment keys and values.\n\nEnvironment variables passed to the invoked `Lambdas`.",
      "properties": {
        "ENV_NAME": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "build": {
      "type": "object",
      "properties": {
        "env": {
          "description": "Environment keys and values.\n\nEnvironment variables passed to the `Build processes`.",
          "$ref": "#/properties/env"
        }
      }
    },
    "builds": {
      "description": "NOTE: The builds property has been deprecated in favor of functions. In the majority of cases, you are no longer required to specify a build, instead relying on the build step."
    },
    "routes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "continue": {
            "type": "boolean",
            "description": "The `continue` property allows routing to continue even though the `src` was matched."
          },
          "status": {
            "type": "number",
            "description": "The status property defines the status code that Vercel should respond with when a path is requested."
          },
          "src": {
            "description": "String supporting PCRE Regex and Route Parameters like `/product/(?<id>[^/]+).`\n\nFor each route, `src` is required to set the path which the behavior will affect.",
            "type": "string"
          },
          "dest": {
            "description": "`dest` is used to rewrite the `src` path to another path, such as another URL or Vercel hosted lambda.",
            "type": "string"
          },
          "methods": {
            "type": "array",
            "description": "The methods property can be used to define what HTTP request methods a particular path accepts.\n\nThe value of this property can be any HTTP request method, with the default being that the path can accept any method.",
            "items": {
              "type": "string",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "enum": ["GET", "POST", "PATCH", "PUT", "DELETE"]
                }
              ]
            }
          },
          "headers": {
            "type": "object",
            "description": "The headers property is an object supporting HTTP headers as the keys, with the intended value as the key's value.",
            "properties": {
              "host": {
                "description": "This header represents the domain name as it was accessed by the client. If the deployment has been aliased and the client visited the alias URL, it contains the alias instead of the underlying deployment URL.",
                "type": "string",
                "default": ""
              },
              "cache-control": {
                "type": "string",
                "default": "s-maxage=604800"
              }
            }
          }
        }
      }
    },
    "redirects": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "An optional HTTP status code in the 301-308 range (default 308)."
          },
          "source": {
            "description": "A pattern that matches each incoming pathname (excluding querystring).",
            "type": "string"
          },
          "destination": {
            "description": "A location destination defined as an absolute pathname or external URL.",
            "type": "string"
          },
          "permanent": {
            "description": "A boolean to toggle between permanent and temporary redirect (default true). When true, the status code is 308. When false the status code is 307.",
            "type": "boolean"
          }
        }
      }
    },
    "rewrites": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "source": {
            "description": "A pattern that matches each incoming pathname (excluding querystring).",
            "type": "string"
          },
          "destination": {
            "description": "An absolute pathname to an existing resource or an external URL.",
            "type": "string"
          }
        }
      }
    },
    "regions": {
      "description": "By setting and modifying this value, you can decide the deployment regions of the Serverless Functions that get created as a result of the build steps. By default, the closest region to the geographical location of the deployment is used, or if using a Vercel for Git Integration, SFO is used by default.\n\nThe special value `all` can be used to target all available regions.\n\nNOTE: The values in regions support targeting a region generically, by omitting the number. If `sfo` is specified, our backend will select a singular region (like `sfo1`) at deploy time.\n\nDuring development via vercel dev, the region is assigned dev1 to mimic the Vercel Platform infrastructure",
      "type": "array",
      "items": {
        "type": "string",
        "default": "iad1",
        "enum": [
          "arn1",
          "bom1",
          "cdg1",
          "cle1",
          "dub1",
          "fra1",
          "gru1",
          "hkg1",
          "hnd1",
          "iad1",
          "icn1",
          "lhr1",
          "pdx1",
          "sfo1",
          "sin1",
          "syd1",
          "dev1"
        ]
      }
    },
    "public": {
      "description": "When set to true, both the source view and logs view will be publicly accessible.",
      "type": "boolean"
    },
    "trailingSlash": {
      "description": "When `trailingSlash: false`, visiting a path that ends with a forward slash will respond with a 308 status code and redirect to the path without the trailing slash.\n\nFor example, the /about/ path will redirect to /about.\n\nWhen trailingSlash: true, visiting a path that does not end with a forward slash will respond with a 308 status code and redirect to the path with a trailing slash.\n\nFor example, the /about path will redirect to /about/.\n\nHowever, paths with a file extension will not redirect to a trailing slash.\n\nFor example, the /about/styles.css path will not redirect, but the /about/styles path will redirect to /about/styles/.",
      "type": "boolean"
    },
    "cleanUrls": {
      "description": "When set to true, all HTML files and Serverless Functions will have their extension removed. When visiting a path that ends with the extension, a 308 response will redirect the client to the extensionless path.\n\nFor example, a static file named about.html will be served when visiting the /about path. Visiting /about.html will redirect to /about.\n\nSimilarly, a Serverless Function named api/user.go will be served when visiting /api/user. Visiting /api/user.go will redirect to /api/user.",
      "default": false,
      "type": "boolean"
    },
    "github": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "When set to false, Vercel for GitHub will not deploy the given project regardless of the GitHub app being installed.",
          "default": true,
          "type": "boolean"
        },
        "autoAlias": {
          "description": "When set to false, Vercel for GitHub will not apply the alias upon merge.",
          "default": true,
          "type": "boolean"
        },
        "silent": {
          "description": "When set to true, Vercel for GitHub will stop commenting on pull requests and commits.",
          "default": false,
          "type": "boolean"
        },
        "autoJobCancelation": {
          "description": "When set to false, Vercel for GitHub will always build pushes in sequence without cancelling a build for the most recent commit.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "headers": {
      "type": "array",
      "additionalItems": true,
      "items": {
        "type": "object",
        "properties": {
          "source": {
            "description": "A pattern that matches each incoming pathname (excluding querystring).",
            "type": "string"
          },
          "headers": {
            "description": "An array of key/value pairs representing each response header.",
            "type": "array",
            "items": {
              "type": "object",
              "key": {
                "default": "Content-Type",
                "type": "string"
              },
              "value": {
                "default": "application/rss+xml",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
